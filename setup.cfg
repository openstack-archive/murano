#    Copyright (c) 2013 Mirantis, Inc.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.


[metadata]
name = murano
summary = Murano API
description-file =
    README.rst
license = Apache License, Version 2.0
author = OpenStack
author-email = openstack-discuss@lists.openstack.org
home-page = https://www.openstack.org/software/releases/mitaka/components/murano
classifier =
    Development Status :: 5 - Production/Stable
    Environment :: OpenStack
    Intended Audience :: Developers
    Intended Audience :: Information Technology
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7

[files]
packages =
    murano
data_files =
    etc/murano =
        etc/murano/murano-cfapi-paste.ini
        etc/murano/murano-paste.ini

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
console_scripts =
    murano-api = murano.cmd.api:main
    murano-engine = murano.cmd.engine:main
    murano-manage = murano.cmd.manage:main
    murano-db-manage = murano.cmd.db_manage:main
    murano-cfapi-db-manage = murano.cmd.cfapi_db_manage:main
    murano-test-runner = murano.cmd.test_runner:main
    murano-cfapi = murano.cmd.cfapi:main
    murano-status = murano.cmd.status:main

wsgi_scripts =
    murano-wsgi-api = murano.httpd.murano_api:init_application

oslo.config.opts =
    murano = murano.opts:list_opts
    keystone_authtoken = keystonemiddleware.opts:list_auth_token_opts
    murano.cfapi = murano.opts:list_cfapi_opts
    castellan.config = castellan.options:list_opts

oslo.config.opts.defaults =
    murano = murano.common.config:set_middleware_defaults

oslo.policy.policies =
    # With the move of default policy in code list_rules returns a list of
    # the default defined polices.
    murano = murano.common.policies:list_rules

murano_policy_modify_actions =
    remove-object = murano.policy.modify.actions.default_actions:RemoveObjectAction
    add-object = murano.policy.modify.actions.default_actions:AddObjectAction
    set-property = murano.policy.modify.actions.default_actions:SetPropertyAction
    remove-relation = murano.policy.modify.actions.default_actions:RemoveRelationAction
    add-relation = murano.policy.modify.actions.default_actions:AddRelationAction

[egg_info]
tag_build =
tag_date = 0
tag_svn_revision = 0

[compile_catalog]
directory = murano/locale
domain = murano

[update_catalog]
domain = murano
output_dir = murano/locale
input_file = murano/locale/murano.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = murano/locale/murano.pot
